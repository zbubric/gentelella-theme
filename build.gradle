buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
        // gradle graph plugin
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.3"
    }
}

version "0.1"
group "gentelella.theme"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
      
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
}


assets {
    packagePlugin = true
}

/*
* Make sure that all custom gentelella files are packed
* as resources in case that they need to be copied to host-project
*/

// Copy gentelella theme files
task copyThemeFiles(type: Copy) {
    from "grails-app/views/layouts"
    into "build/resources/main/gentelella/layouts"
}

// Copy customised static views
task copyStaticViews(type: Copy) {
    from "${project.projectDir}/grails-app/views"
    into "build/resources/main/gentelella/static-views"    
    include '*.gsp'    
}

// Copy fields rendering definitions
task copyFieldsFiles(type: Copy) {
    from "grails-app/views/_fields"
    into "build/resources/main/gentelella/fields"
}

// Copy tables/list rendering definitions
task copyTableListFiles(type: Copy) {
    from "/grails-app/views/templates"
    into "build/resources/main/gentelella/fields/templates"  
}

// Copy tables/list rendering definitions
task copyScaffoldTemplates(type: Copy) {
    from "/src/main/templates/scaffolding"
    into "build/resources/main/gentelella/scaffolding"  
}

//noinspection GroovyAssignabilityCheck
processResources.finalizedBy copyScaffoldTemplates, copyStaticViews, copyThemeFiles, copyFieldsFiles, copyTableListFiles

/*
processResources{
    dependsOn copyStaticViews, copyThemeFiles, copyFieldsFiles, copyTableListFiles
}
*/
